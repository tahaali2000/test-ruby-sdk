# cypress_test_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CypressTestApi
  # MultipleArraysRequest Model.
  class MultipleArraysRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # An array containing items of type string
    # @return [Array[String]]
    attr_accessor :array1

    # An array containing items of type integer
    # @return [Array[Integer]]
    attr_accessor :array2

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['array1'] = 'Array1'
      @_hash['array2'] = 'Array2'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        array2
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(array1:, array2: SKIP)
      @array1 = array1
      @array2 = array2 unless array2 == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      array1 = hash.key?('Array1') ? hash['Array1'] : nil
      array2 = hash.key?('Array2') ? hash['Array2'] : SKIP

      # Create object from extracted values.
      MultipleArraysRequest.new(array1: array1,
                                array2: array2)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} array1: #{@array1}, array2: #{@array2}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} array1: #{@array1.inspect}, array2: #{@array2.inspect}>"
    end
  end
end
